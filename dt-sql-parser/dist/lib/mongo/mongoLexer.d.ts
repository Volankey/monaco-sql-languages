import * as antlr from "antlr4ng";
export declare class mongoLexer extends antlr.Lexer {
    static readonly T__0 = 1;
    static readonly T__1 = 2;
    static readonly T__2 = 3;
    static readonly T__3 = 4;
    static readonly T__4 = 5;
    static readonly T__5 = 6;
    static readonly SingleLineComment = 7;
    static readonly MultiLineComment = 8;
    static readonly StringLiteral = 9;
    static readonly NullLiteral = 10;
    static readonly BooleanLiteral = 11;
    static readonly NumericLiteral = 12;
    static readonly DecimalLiteral = 13;
    static readonly HexIntegerLiteral = 14;
    static readonly OctalIntegerLiteral = 15;
    static readonly OctalIntegerLiteral2 = 16;
    static readonly BinaryIntegerLiteral = 17;
    static readonly BigHexIntegerLiteral = 18;
    static readonly BigOctalIntegerLiteral = 19;
    static readonly BigBinaryIntegerLiteral = 20;
    static readonly BigDecimalIntegerLiteral = 21;
    static readonly LineTerminator = 22;
    static readonly SEMICOLON = 23;
    static readonly DOT = 24;
    static readonly DB = 25;
    static readonly LF = 26;
    static readonly CRLF = 27;
    static readonly OPEN_BRACKET = 28;
    static readonly CLOSED_BRACKET = 29;
    static readonly STRING_LITERAL = 30;
    static readonly WhiteSpaces = 31;
    static readonly channelNames: string[];
    static readonly literalNames: (string | null)[];
    static readonly symbolicNames: (string | null)[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    constructor(input: antlr.CharStream);
    get grammarFileName(): string;
    get literalNames(): (string | null)[];
    get symbolicNames(): (string | null)[];
    get ruleNames(): string[];
    get serializedATN(): number[];
    get channelNames(): string[];
    get modeNames(): string[];
    sempred(localContext: antlr.RuleContext | null, ruleIndex: number, predIndex: number): boolean;
    private OctalIntegerLiteral_sempred;
    static readonly _serializedATN: number[];
    private static __ATN;
    static get _ATN(): antlr.ATN;
    private static readonly vocabulary;
    get vocabulary(): antlr.Vocabulary;
    private static readonly decisionsToDFA;
}
